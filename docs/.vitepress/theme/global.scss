@mixin px2rpx($name, $px) {
    #{$name}: $px * 1px;
}

@mixin fontSize($px) {
    @include px2rpx(font-size, $px);
}

@for $i from 0 through 60 {
    .font-#{$i * 2} {
        @include fontSize($i * 2);
    }
}

.font-bold {
    font-weight: 900;
}

.font-middle {
    font-weight: 700;
}

.font-normal {
    font-weight: normal;
}

.font-light {
    font-weight: 100;
}

.line-height-1 {
    line-height: 1;
}

@for $i from 375 through 0 {
    .w-#{$i * 2}px {
        @include px2rpx(width, $i * 2);
    }

    .h-#{$i * 2}px {
        @include px2rpx(height, $i * 2);
    }
}

.w-20 {
    width: 20%;
}

.w-25 {
    width: 25%;
}

.w-33 {
    width: 33.33333333%;
}

.w-50 {
    width: 50%;
}

.w-100 {
    width: 100%;
}

.h-100 {
    height: 100%;
}

.w-100vw {
    width: 100vw;
}

.h-100vh {
    height: 100vh;
}

.w-auto {
    width: auto;
}

.h-auto {
    height: auto;
}

@for $i from 60 through 0 {
    .left-#{$i * 2} {
        @include px2rpx(left, $i * 2);
    }

    .right-#{$i * 2} {
        left: auto;
        @include px2rpx(right, $i * 2);
    }

    .top-#{$i * 2} {
        @include px2rpx(top, $i * 2);
    }

    .bottom-#{$i * 2} {
        @include px2rpx(bottom, $i * 2);
    }

    .pd-#{$i * 2} {
        @include px2rpx(padding-left, $i * 2);
        @include px2rpx(padding-right, $i * 2);
        @include px2rpx(padding-top, $i * 2);
        @include px2rpx(padding-bottom, $i * 2);
    }

    .pdl-#{$i * 2} {
        @include px2rpx(padding-left, $i * 2);
    }

    .pdr-#{$i * 2} {
        @include px2rpx(padding-right, $i * 2);
    }

    .pdt-#{$i * 2} {
        @include px2rpx(padding-top, $i * 2);
    }

    .pdb-#{$i * 2} {
        @include px2rpx(padding-bottom, $i * 2);
    }

    .mg-#{$i * 2} {
        @include px2rpx(margin-left, $i * 2);
        @include px2rpx(margin-right, $i * 2);
        @include px2rpx(margin-top, $i * 2);
        @include px2rpx(margin-bottom, $i * 2);
    }

    .mgl-#{$i * 2} {
        @include px2rpx(margin-left, $i * 2);
    }

    .mgr-#{$i * 2} {
        @include px2rpx(margin-right, $i * 2);
    }

    .mgt-#{$i * 2} {
        @include px2rpx(margin-top, $i * 2);
    }

    .mgb-#{$i * 2} {
        @include px2rpx(margin-bottom, $i * 2);
    }
}

@mixin border($name, $num, $color) {
    #{$name}: $num * 1px solid $color;
}

@mixin border-radius($val) {
    border-radius: $val * 1px;
}

@for $i from 50 through 0 {
    .border-radius-#{$i * 2} {
        @include border-radius($i * 2);
    }
}


.bd-none {
    border: 0;
}

.border-radius-half {
    border-radius: 50%;
}


/* 弹性布局盒模型 */
.flex {
    display: flex; // 新版本语法： Opera 12.1, Firefox 22+
}

.inline-flex {
    display: inline-flex;
}

.flex-wrap {
    flex-wrap: wrap;
}

.flex-align-start {
    align-items: flex-start;
}

.flex-align-center {
    align-items: center;
}

.flex-align-end {
    align-items: flex-end;
}

.flex-self-start {
    align-self: flex-start;
}

.flex-justify-center {
    justify-content: center;
}

.flex-between {
    justify-content: space-between;
}

.flex-around {
    justify-content: space-around;
    
}

.flex-start {
    justify-content: flex-start;
}

.flex-end {
    justify-content: flex-end;
}

.flex-row{
    flex-direction: row;
}

.flex-column {
    flex-direction: column;
}

.flex-row {
    flex-direction: row;
}

.flex-1 {
    flex: 1;
}

.flex-2 {
    flex: 2;
}

.flex-3 {
    flex: 3;
}

.flex-4 {
    flex: 4;
}

.flex-5 {
    flex: 5;
}

.flex-6 {
    flex: 6;
}

.flex-7 {
    flex: 7;
}

.flex-8 {
    flex: 8;
}

.flex-none {
    flex: none;
}

.flex-auto {
    flex: auto;
}

.flex-shrink-0 {
    flex-shrink: 0;
}
.flex-grow-0{
    flex-grow: 0;
}
.flex-grow-1{
    flex-grow: 1;
}
.position-relative {
    position: relative;
}

.position-absolute {
    position: absolute;
}
.position-fixed{
    position: fixed;
}
.align-center{
    text-align: center;
}
.align-right{
    text-align: right;
}

