import { ssrRenderAttrs, ssrRenderStyle } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.yVxbj29m.js";
const __pageData = JSON.parse('{"title":"DOM Text 和 Comment 类型","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/1-前端/4-JavaScript/1 基础/50-DOM Text 和 Comment 类型.md","filePath":"markdown/1-前端/4-JavaScript/1 基础/50-DOM Text 和 Comment 类型.md"}');
const _sfc_main = { name: "markdown/1-前端/4-JavaScript/1 基础/50-DOM Text 和 Comment 类型.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="dom-text-和-comment-类型" tabindex="-1">DOM Text 和 Comment 类型 <a class="header-anchor" href="#dom-text-和-comment-类型" aria-label="Permalink to &quot;DOM Text 和 Comment 类型&quot;">​</a></h1><h2 id="text-类型" tabindex="-1">Text 类型 <a class="header-anchor" href="#text-类型" aria-label="Permalink to &quot;Text 类型&quot;">​</a></h2><h5 id="_1-特征" tabindex="-1">1. 特征 <a class="header-anchor" href="#_1-特征" aria-label="Permalink to &quot;1. 特征&quot;">​</a></h5><ul><li><strong>nodeType</strong> 等于 3</li><li><strong>nodeName</strong> 值为元素 <strong>#text</strong></li><li><strong>nodeValue</strong> 值为节点中包含的文本</li><li>不支持子节点</li></ul><blockquote><p>可以通过 <strong>nodeValue</strong> 和 <strong>data</strong> 获取包含的文本，两个值是一样的</p></blockquote><h5 id="_2-操作文本的方法" tabindex="-1">2. 操作文本的方法 <a class="header-anchor" href="#_2-操作文本的方法" aria-label="Permalink to &quot;2. 操作文本的方法&quot;">​</a></h5><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td><code>appendData(text)</code></td><td>像节点末尾添加文本 <strong>text</strong></td></tr><tr><td><code>deleteData(offset, count)</code></td><td>从位置 <strong>offset</strong> 开始删除 <strong>count</strong> 个字符</td></tr><tr><td><code>insertData(offset, text)</code></td><td>在位置 <strong>offset</strong> 插入 <strong>text</strong></td></tr><tr><td><code>replaceData(offset, count, text)</code></td><td>用 <strong>text</strong> 替换从位置 <strong>offset</strong> 到 <strong>offset + count</strong> 的文本</td></tr><tr><td><code>splitText(offset)</code></td><td>在位置 <strong>offset</strong> 将当前文本节点拆分为两个文本节点</td></tr><tr><td><code>substringData(offset, count)</code></td><td>提取从位置 <strong>offset</strong> 到 <strong>offset + count</strong> 的文本</td></tr></tbody></table><h5 id="_3-操作文本节点" tabindex="-1">3. 操作文本节点 <a class="header-anchor" href="#_3-操作文本节点" aria-label="Permalink to &quot;3. 操作文本节点&quot;">​</a></h5><ul><li>一般只有一个文本节点</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">const</span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}"> textNode</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}"> =</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> div.firstChild</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">textNode.nodeValue </span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> &#39;hello world&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>当父节点中有多个子文本节点时，可以调用 <strong>normalize()</strong> 方法合并子节点</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">const</span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}"> div</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}"> =</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> document.</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">createElement</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">(</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">&#39;div&#39;</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">div.</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">appendChild</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">( document.</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">createTextNode</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">(</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">&#39;hello&#39;</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">) )</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">div.</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">appendChild</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">( document.</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">createTextNode</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">(</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">&#39;world&#39;</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">) )</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">console.</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">log</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">(div.childNodes.</span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}">length</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">) </span><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}">// 2</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">div.</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">normalize</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">()</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">console.</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">log</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">(div.childNodes.</span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}">length</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">) </span><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}">// 1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="comment-类型" tabindex="-1">Comment 类型 <a class="header-anchor" href="#comment-类型" aria-label="Permalink to &quot;Comment 类型&quot;">​</a></h2><h5 id="_1-特征-1" tabindex="-1">1. 特征 <a class="header-anchor" href="#_1-特征-1" aria-label="Permalink to &quot;1. 特征&quot;">​</a></h5><ul><li><strong>nodeType</strong> 等于 8</li><li><strong>nodeName</strong> 值为元素 <strong>#comment</strong></li><li><strong>nodeValue</strong> 值为注释内容</li><li>不支持子节点</li></ul></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("markdown/1-前端/4-JavaScript/1 基础/50-DOM Text 和 Comment 类型.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const _50DOM_Text___Comment___ = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  _50DOM_Text___Comment___ as default
};
