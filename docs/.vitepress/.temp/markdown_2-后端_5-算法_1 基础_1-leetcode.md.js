import { ssrRenderAttrs, ssrRenderStyle } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.yVxbj29m.js";
const __pageData = JSON.parse('{"title":"Leetcode","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/2-后端/5-算法/1 基础/1-leetcode.md","filePath":"markdown/2-后端/5-算法/1 基础/1-leetcode.md"}');
const _sfc_main = { name: "markdown/2-后端/5-算法/1 基础/1-leetcode.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="leetcode" tabindex="-1">Leetcode <a class="header-anchor" href="#leetcode" aria-label="Permalink to &quot;Leetcode&quot;">​</a></h1><h2 id="网站" tabindex="-1">网站 <a class="header-anchor" href="#网站" aria-label="Permalink to &quot;网站&quot;">​</a></h2><p><a href="https://leetcode-cn.com/" target="_blank" rel="noreferrer">中国版</a>：有 cn</p><p><a href="https://leetcode.com/" target="_blank" rel="noreferrer">全球版</a>：无 cn</p><h2 id="ide插件" tabindex="-1">ide插件 <a class="header-anchor" href="#ide插件" aria-label="Permalink to &quot;ide插件&quot;">​</a></h2><h4 id="vscode" tabindex="-1">vscode <a class="header-anchor" href="#vscode" aria-label="Permalink to &quot;vscode&quot;">​</a></h4><ol><li><p>在插件搜索 <strong>leetcode</strong> 并安装</p></li><li><p>点击左侧图标进入 <strong>leetcode</strong>，并点击网络图标选择中国版，最后登录</p><p><img src="https://gitee.com/kingmusi/imgs/raw/master/blog/202111021635346.png" alt=""></p></li><li><p>下载 <strong>Debug Leetcode</strong> 可进行 Debug</p></li></ol><h4 id="idea" tabindex="-1">idea <a class="header-anchor" href="#idea" aria-label="Permalink to &quot;idea&quot;">​</a></h4><ol><li>在 <code>Plugin</code> 中搜索 <code>leetcode</code>，安装 <code>leetcode editor</code> 插件</li><li>重启 idea</li><li>在右下角有 leecode，点击打开后，点击设置</li></ol><p><img src="https://cdn.jsdelivr.net/gh/kingmusi/blogImages/img/20220125003747.png" alt=""></p><ol start="4"><li>进行以下设置</li></ol><p><img src="https://cdn.jsdelivr.net/gh/kingmusi/blogImages/img/20220125003914.png" alt=""></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>$!velocityTool.camelCaseName(\${question.titleSlug})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">\${question.content}</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">package</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> leetcode.editor.cn;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}">//Java：\${question.title}</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">public</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}"> class</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}"> $</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">!velocityTool.camelCaseName(\${question.titleSlug}){</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}"> public</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}"> static</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}"> void</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}"> main</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">(</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">String</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">[] args) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">  Solution solution </span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}"> new</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> $</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">!</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">velocityTool.</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">camelCaseName</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">(\${question.titleSlug})().</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">new</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}"> Solution</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">();</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}">  // TO TEST</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">  </span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> \${question.code}</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ol start="5"><li><p>然后 idea 打开新的项目，项目地址为你设置中保存 leetcode-idea 的位置</p></li><li><p>即可选择题目，进行代码编写</p><ul><li>右键可进行代码提交</li><li>在 <code>Main</code> 中可以进行 Bebug</li></ul></li></ol><h2 id="刷题法" tabindex="-1">刷题法 <a class="header-anchor" href="#刷题法" aria-label="Permalink to &quot;刷题法&quot;">​</a></h2><h4 id="第一遍" tabindex="-1">第一遍 <a class="header-anchor" href="#第一遍" aria-label="Permalink to &quot;第一遍&quot;">​</a></h4><ul><li>5分钟：读题 + 思考</li><li>会则写</li><li>不会则直接看解法，要看多解法，并比较解法的优劣</li><li>背诵、默写好的解法</li></ul><h4 id="第二遍" tabindex="-1">第二遍 <a class="header-anchor" href="#第二遍" aria-label="Permalink to &quot;第二遍&quot;">​</a></h4><ul><li>自己写，并在 <strong>leetcode</strong> 上通过</li></ul><h4 id="第三遍" tabindex="-1">第三遍 <a class="header-anchor" href="#第三遍" aria-label="Permalink to &quot;第三遍&quot;">​</a></h4><ul><li>一天后，重复做此题</li></ul><h4 id="第四遍" tabindex="-1">第四遍 <a class="header-anchor" href="#第四遍" aria-label="Permalink to &quot;第四遍&quot;">​</a></h4><ul><li>一周后，重复做此题</li></ul><h4 id="第五遍" tabindex="-1">第五遍 <a class="header-anchor" href="#第五遍" aria-label="Permalink to &quot;第五遍&quot;">​</a></h4><ul><li>面试前恢复性训练（把以前做过的题再做一遍）</li></ul></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("markdown/2-后端/5-算法/1 基础/1-leetcode.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const _1Leetcode = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  _1Leetcode as default
};
