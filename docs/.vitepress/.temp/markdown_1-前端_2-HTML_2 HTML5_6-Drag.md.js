import { ssrRenderAttrs, ssrRenderStyle } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.yVxbj29m.js";
const __pageData = JSON.parse('{"title":"Drag","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/1-前端/2-HTML/2 HTML5/6-Drag.md","filePath":"markdown/1-前端/2-HTML/2 HTML5/6-Drag.md"}');
const _sfc_main = { name: "markdown/1-前端/2-HTML/2 HTML5/6-Drag.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="drag" tabindex="-1">Drag <a class="header-anchor" href="#drag" aria-label="Permalink to &quot;Drag&quot;">​</a></h1><h2 id="拖放元素" tabindex="-1">拖放元素 <a class="header-anchor" href="#拖放元素" aria-label="Permalink to &quot;拖放元素&quot;">​</a></h2><ul><li>默认情况下，图片、链接、选中文本是可拖动的</li><li>可以让除上面三种元素外的元素可拖动，添加<code>draggable</code> 属性即可</li></ul><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">&lt;</span><span style="${ssrRenderStyle({ "--shiki-light": "#22863A", "--shiki-dark": "#85E89D" })}">div</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}"> draggable</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">&gt;&lt;/</span><span style="${ssrRenderStyle({ "--shiki-light": "#22863A", "--shiki-dark": "#85E89D" })}">div</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>事件</li></ul><table><thead><tr><th>type</th><th>触发时间</th></tr></thead><tbody><tr><td>dragstart</td><td>开始拖放时</td></tr><tr><td>drag</td><td>拖放过程中</td></tr><tr><td>dragend</td><td>拖放完成时</td></tr></tbody></table><h2 id="放置目标" tabindex="-1">放置目标 <a class="header-anchor" href="#放置目标" aria-label="Permalink to &quot;放置目标&quot;">​</a></h2><ul><li>事件</li></ul><table><thead><tr><th>type</th><th>触发时间</th></tr></thead><tbody><tr><td>dragenter</td><td>拖放元素进入目标元素时时</td></tr><tr><td>dragover</td><td>拖放元素在目标元素上移动时</td></tr><tr><td>drop</td><td>拖放元素在目标元素上，且松开鼠标时</td></tr></tbody></table><blockquote><p>自定义放置目标</p><ul><li><p>阻止 <strong>dragenter</strong> 和 <strong>dragover</strong> 的默认事件，才可以触发 <strong>drop</strong>，此时才能算一个放置目标</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">droptarget.</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">addEventListener</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">(</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">&#39;dragenter&#39;</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">, </span><span style="${ssrRenderStyle({ "--shiki-light": "#E36209", "--shiki-dark": "#FFAB70" })}">e</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}"> =&gt;</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">    e.</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">preventDefault</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">()</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">})</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">droptarget.</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">addEventListener</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">(</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">&#39;dragover&#39;</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">, </span><span style="${ssrRenderStyle({ "--shiki-light": "#E36209", "--shiki-dark": "#FFAB70" })}">e</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}"> =&gt;</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">    e.</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">preventDefault</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">()</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li><li><p>拖动 <strong>URL</strong> 和图片会默认导航至对应页面，为阻止这个行为，可以阻止 <strong>drop</strong> 的默认事件</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">droptarget.</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">addEventListener</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">(</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">&#39;drop&#39;</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">, </span><span style="${ssrRenderStyle({ "--shiki-light": "#E36209", "--shiki-dark": "#FFAB70" })}">e</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}"> =&gt;</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">    e.</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">preventDefault</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">()</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li></ul></blockquote><h2 id="datatransfer-对象" tabindex="-1">dataTransfer 对象 <a class="header-anchor" href="#datatransfer-对象" aria-label="Permalink to &quot;dataTransfer 对象&quot;">​</a></h2><h5 id="_1-获取拖放数据" tabindex="-1">1. 获取拖放数据 <a class="header-anchor" href="#_1-获取拖放数据" aria-label="Permalink to &quot;1. 获取拖放数据&quot;">​</a></h5><ul><li>对于文件或图片：通过 <code>e.dataTransfer.files</code> 获取</li><li>对于文字：通过 <code>e.dataTransfer.getData(&#39;Text&#39;)</code> 获取</li><li>对于链接，通过 <code>e.dataTransfer.getData(&#39;URL&#39;)</code> 获取</li></ul><h5 id="_2-自定义数据" tabindex="-1">2. 自定义数据 <a class="header-anchor" href="#_2-自定义数据" aria-label="Permalink to &quot;2. 自定义数据&quot;">​</a></h5><ul><li>一般在 <strong>dragstart</strong> 事件中，通过 <code>e.dataTransfer.setData(key, value)</code> 来设置自定义数据</li><li>在 <strong>drop</strong> 事件中，通过 <strong>getData</strong> 获取</li></ul><h5 id="_3-其他成员" tabindex="-1">3. 其他成员 <a class="header-anchor" href="#_3-其他成员" aria-label="Permalink to &quot;3. 其他成员&quot;">​</a></h5><ul><li><code>setDragImage(element, x, y)</code>：指定拖动发生时显示在光标下的图片。<strong>element</strong> 是一个 <strong>HTML</strong> 元素，可以是图片</li><li><code>types</code>：当前存储的数据类型列表，可以根据判断是否接受数据，或获取数据的方法</li></ul></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("markdown/1-前端/2-HTML/2 HTML5/6-Drag.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const _6Drag = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  _6Drag as default
};
