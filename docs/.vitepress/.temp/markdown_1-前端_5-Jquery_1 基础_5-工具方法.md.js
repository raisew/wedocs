import { ssrRenderAttrs, ssrRenderStyle } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.yVxbj29m.js";
const __pageData = JSON.parse('{"title":"工具方法","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/1-前端/5-Jquery/1 基础/5-工具方法.md","filePath":"markdown/1-前端/5-Jquery/1 基础/5-工具方法.md"}');
const _sfc_main = { name: "markdown/1-前端/5-Jquery/1 基础/5-工具方法.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="工具方法" tabindex="-1">工具方法 <a class="header-anchor" href="#工具方法" aria-label="Permalink to &quot;工具方法&quot;">​</a></h1><blockquote><p>定义在 <strong>jquery</strong> 上的方法，直接 <code>$.</code> 或 <code>jQuery.</code> 即可调用</p></blockquote><h3 id="type" tabindex="-1">type() <a class="header-anchor" href="#type" aria-label="Permalink to &quot;type()&quot;">​</a></h3><ul><li>判断传入的数据类型</li></ul><hr><h3 id="trim" tabindex="-1">trim() <a class="header-anchor" href="#trim" aria-label="Permalink to &quot;trim()&quot;">​</a></h3><ul><li>去除头尾的空格</li></ul><hr><h3 id="proxy" tabindex="-1">proxy() <a class="header-anchor" href="#proxy" aria-label="Permalink to &quot;proxy()&quot;">​</a></h3><ul><li>改变 <strong>this</strong> 指向，把改变 <strong>this</strong> 指向后的函数返回</li><li>参数 <ol><li><strong>function</strong></li><li>改变this的对象</li></ol></li></ul><hr><h3 id="noconflict" tabindex="-1">noConflict() <a class="header-anchor" href="#noconflict" aria-label="Permalink to &quot;noConflict()&quot;">​</a></h3><ul><li>有新的变量接受 <code>$</code>，可以让 <code>$</code> 空出来给其他库使用</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">var</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> newJquery </span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> $.</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">noConflict</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">()</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">console.</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">log</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">( newJquery.</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">type</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">([]) ) </span><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}">// array</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">console.</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">log</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">( $.</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">type</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">([]) ) </span><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}">// TypeError: Cannot read property &#39;type&#39; of undefined</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><hr><h3 id="makearray" tabindex="-1">makeArray() <a class="header-anchor" href="#makearray" aria-label="Permalink to &quot;makeArray()&quot;">​</a></h3><ul><li>把类数组转换为数组</li></ul><hr></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("markdown/1-前端/5-Jquery/1 基础/5-工具方法.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const _5_____ = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  _5_____ as default
};
