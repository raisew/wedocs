import { ssrRenderAttrs, ssrRenderStyle } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.yVxbj29m.js";
const __pageData = JSON.parse('{"title":"创建及运行项目","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/1-前端/9-Flutter/1 环境/2-创建及运行项目.md","filePath":"markdown/1-前端/9-Flutter/1 环境/2-创建及运行项目.md"}');
const _sfc_main = { name: "markdown/1-前端/9-Flutter/1 环境/2-创建及运行项目.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="创建及运行项目" tabindex="-1">创建及运行项目 <a class="header-anchor" href="#创建及运行项目" aria-label="Permalink to &quot;创建及运行项目&quot;">​</a></h1><h2 id="工程模式" tabindex="-1">工程模式 <a class="header-anchor" href="#工程模式" aria-label="Permalink to &quot;工程模式&quot;">​</a></h2><h4 id="flutter-app" tabindex="-1">Flutter App <a class="header-anchor" href="#flutter-app" aria-label="Permalink to &quot;Flutter App&quot;">​</a></h4><ul><li>构建一个标准 FlutterApp（统一管理模式）</li><li>包含 Dart 层和平台层（IOS/Android）</li></ul><h4 id="flutter-module" tabindex="-1">Flutter Module <a class="header-anchor" href="#flutter-module" aria-label="Permalink to &quot;Flutter Module&quot;">​</a></h4><ul><li>创建一个 Flutter 模块（三段分离模式）</li><li>以模块的形式分别嵌入原生项目</li></ul><h4 id="flutter-package" tabindex="-1">Flutter Package <a class="header-anchor" href="#flutter-package" aria-label="Permalink to &quot;Flutter Package&quot;">​</a></h4><ul><li>纯 Dart 插件工程，不依赖 Flutter</li><li>仅包含 Dart 层的实现，通常用来定义一些公共库</li></ul><h4 id="flutter-plugin" tabindex="-1">Flutter Plugin <a class="header-anchor" href="#flutter-plugin" aria-label="Permalink to &quot;Flutter Plugin&quot;">​</a></h4><ul><li>Flutter 平台插件，包含 Dart 层与 Native 平台层的实现</li><li>是一种特殊的 Flutter Packages</li></ul><h4 id="flutter-skeleton" tabindex="-1">Flutter Skeleton <a class="header-anchor" href="#flutter-skeleton" aria-label="Permalink to &quot;Flutter Skeleton&quot;">​</a></h4><ul><li>自动生成 Flutter 模板</li><li>提供常用框架</li></ul><h2 id="flutter-create" tabindex="-1">flutter create <a class="header-anchor" href="#flutter-create" aria-label="Permalink to &quot;flutter create&quot;">​</a></h2><p>通过命令行形式创建</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">flutter</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> create</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> xxx</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><blockquote><p>可通过 <code>-template=app/module/package/plugin/skeleton</code> 指定不同的项目类型</p><p>可通过 <code>-platforms=ios/android/windows/linux/macos/web</code> 指定多个平台（通过 <code>,</code> 分割）</p></blockquote><p>可以通过命令行形式运行</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">flutter</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> run</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> xxx</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="android-studio" tabindex="-1">Android Studio <a class="header-anchor" href="#android-studio" aria-label="Permalink to &quot;Android Studio&quot;">​</a></h2><ol><li>创建</li></ol><p><img src="https://cdn.jsdelivr.net/gh/kingmusi/blogImages/img/202302051926642.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/kingmusi/blogImages/img/202302051926120.png" alt=""></p><ol start="2"><li><p>在 <code>Project name</code> 中改变项目名称，在<code>Description</code> 中改变项目描述</p></li><li><p>创建完成</p></li><li><p>运行</p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/kingmusi/blogImages/img/202302051926460.png" alt=""></p></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("markdown/1-前端/9-Flutter/1 环境/2-创建及运行项目.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const _2________ = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  _2________ as default
};
