import { ssrRenderAttrs, ssrRenderStyle } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.yVxbj29m.js";
const __pageData = JSON.parse('{"title":"鼠标和滚轮事件","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/1-前端/4-JavaScript/1 基础/61-鼠标和滚轮事件.md","filePath":"markdown/1-前端/4-JavaScript/1 基础/61-鼠标和滚轮事件.md"}');
const _sfc_main = { name: "markdown/1-前端/4-JavaScript/1 基础/61-鼠标和滚轮事件.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="鼠标和滚轮事件" tabindex="-1">鼠标和滚轮事件 <a class="header-anchor" href="#鼠标和滚轮事件" aria-label="Permalink to &quot;鼠标和滚轮事件&quot;">​</a></h1><h2 id="鼠标事件" tabindex="-1">鼠标事件 <a class="header-anchor" href="#鼠标事件" aria-label="Permalink to &quot;鼠标事件&quot;">​</a></h2><table><thead><tr><th>事件</th><th>说明</th></tr></thead><tbody><tr><td><code>click</code></td><td>用户单击鼠标主键，或按键盘回车键时触发</td></tr><tr><td><code>dblclick</code></td><td>用户双击鼠标主键时触发</td></tr><tr><td><code>mousedown</code></td><td>用户按下任意鼠标键时触发</td></tr><tr><td><code>mouseup</code></td><td>用户释放鼠标键时触发</td></tr><tr><td><code>mouseenter</code></td><td>用户把鼠标光标从元素外部移到元素内部时触发<br>事件不冒泡，不会在经过后代元素时触发</td></tr><tr><td><code>mouseleave</code></td><td>用户把鼠标光标从元素内部移到元素外部时触发<br>事件不冒泡，不会在经过后代元素时触发</td></tr><tr><td><code>mousemove</code></td><td>鼠标光标在元素上移动时反复触发</td></tr><tr><td><code>mouseout</code></td><td>用户把鼠标光标从一个元素移动到另一个元素上时触发。移动到的元素可以是子元素</td></tr><tr><td><code>mouseover</code></td><td>用户把鼠标光标从元素外部移动到元素内部时触发。</td></tr><tr><td><code>mousewheel</code></td><td>用户滚动鼠标时触发</td></tr></tbody></table><h2 id="光标位置" tabindex="-1">光标位置 <a class="header-anchor" href="#光标位置" aria-label="Permalink to &quot;光标位置&quot;">​</a></h2><h5 id="_1-客户端坐标-光标基于视口-可视区域-不算滚动条-的位置" tabindex="-1">1. 客户端坐标：光标基于视口（可视区域，不算滚动条）的位置 <a class="header-anchor" href="#_1-客户端坐标-光标基于视口-可视区域-不算滚动条-的位置" aria-label="Permalink to &quot;1. 客户端坐标：光标基于视口（可视区域，不算滚动条）的位置&quot;">​</a></h5><ul><li><strong>clientX</strong> 和 <strong>clientY</strong></li></ul><h5 id="_2-页面坐标-光标基于页面-算上滚动条-的位置" tabindex="-1">2. 页面坐标：光标基于页面（算上滚动条）的位置 <a class="header-anchor" href="#_2-页面坐标-光标基于页面-算上滚动条-的位置" aria-label="Permalink to &quot;2. 页面坐标：光标基于页面（算上滚动条）的位置&quot;">​</a></h5><ul><li><strong>pageX</strong> 和 <strong>pageY</strong></li></ul><h5 id="_3-屏幕坐标-光标基于整个屏幕的位置" tabindex="-1">3. 屏幕坐标：光标基于整个屏幕的位置 <a class="header-anchor" href="#_3-屏幕坐标-光标基于整个屏幕的位置" aria-label="Permalink to &quot;3. 屏幕坐标：光标基于整个屏幕的位置&quot;">​</a></h5><ul><li><strong>screenX</strong> 和 <strong>screenY</strong></li></ul><h2 id="修饰键" tabindex="-1">修饰键 <a class="header-anchor" href="#修饰键" aria-label="Permalink to &quot;修饰键&quot;">​</a></h2><p>键盘上的修饰键 <strong>Shift</strong>、<strong>Ctrl</strong>、<strong>Alt</strong>、<strong>Meta</strong> 经常用于修改鼠标事件行为</p><p>可以获取以下几个修饰键状态，<strong>true</strong> 为按下，<strong>false</strong> 为没按下：</p><ul><li><strong>shiftKey</strong>、<strong>ctrlKey</strong>、<strong>altKey</strong>、<strong>metaKey</strong></li></ul><h2 id="相关元素" tabindex="-1">相关元素 <a class="header-anchor" href="#相关元素" aria-label="Permalink to &quot;相关元素&quot;">​</a></h2><p>对于 <strong>mouseover</strong> 和 <strong>mouseout</strong> 事件来说，拥有相关元素</p><ul><li><strong>mouseover</strong>：相关元素是移进监听元素前的元素</li><li><strong>mouseout</strong>：相关元素是移出监听元素后的元素</li></ul><p>考虑到浏览器兼容下，下面是获取相关元素的封装函数</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">var</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> EventUtil </span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">    getRelatedTarget</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">: </span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">function</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">(</span><span style="${ssrRenderStyle({ "--shiki-light": "#E36209", "--shiki-dark": "#FFAB70" })}">event</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">        if</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> (event.relatedTarget) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">            return</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> event.relatedTarget</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">        } </span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">else</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}"> if</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> (event.toElement) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">            return</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> event.toElement</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">        } </span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">else</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}"> if</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> (event.fromElement) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">            return</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> event.fromElement</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">        } </span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">else</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">			return</span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}"> null</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">        }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">    }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>如</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">&lt;</span><span style="${ssrRenderStyle({ "--shiki-light": "#22863A", "--shiki-dark": "#85E89D" })}">body</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">&gt;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">	&lt;</span><span style="${ssrRenderStyle({ "--shiki-light": "#22863A", "--shiki-dark": "#85E89D" })}">div</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">&gt;&lt;/</span><span style="${ssrRenderStyle({ "--shiki-light": "#22863A", "--shiki-dark": "#85E89D" })}">div</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">&gt;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">&lt;/</span><span style="${ssrRenderStyle({ "--shiki-light": "#22863A", "--shiki-dark": "#85E89D" })}">body</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">div.</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">addEventListener</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">(</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">&#39;mouseover&#39;</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">, </span><span style="${ssrRenderStyle({ "--shiki-light": "#E36209", "--shiki-dark": "#FFAB70" })}">event</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}"> =&gt;</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> console.</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">log</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">(EventUtil.</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">getRelatedTarget</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">(event)))</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">div.</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">addEventListener</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">(</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">&#39;mouseout&#39;</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">, </span><span style="${ssrRenderStyle({ "--shiki-light": "#E36209", "--shiki-dark": "#FFAB70" })}">event</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}"> =&gt;</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> console.</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">log</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">(EventUtil.</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">getRelatedTarget</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">(event)))</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>鼠标在 <strong>body</strong> 上，移进 <strong>div</strong> 时，打印 <code>&lt;body&gt;</code></p><p>鼠标在 <strong>div</strong> 上，移出 <strong>div</strong> 时，打印 <code>&lt;body&gt;</code></p><h2 id="鼠标按键" tabindex="-1">鼠标按键 <a class="header-anchor" href="#鼠标按键" aria-label="Permalink to &quot;鼠标按键&quot;">​</a></h2><p>对于 <strong>mousedown</strong> 和 <strong>mouseup</strong> 事件，<strong>event</strong> 上有一个 <strong>button</strong> 属性，表示按下或释放的哪个按键</p><ul><li>0：鼠标主键（一般是左键）</li><li>1：鼠标中键</li><li>2：鼠标复键</li></ul><h2 id="滚动方向" tabindex="-1">滚动方向 <a class="header-anchor" href="#滚动方向" aria-label="Permalink to &quot;滚动方向&quot;">​</a></h2><p>对于 <strong>mousewheel</strong> 事件，<strong>event</strong> 上有一个 <strong>wheelDelta</strong> 属性</p><ul><li><strong>+120</strong>：向前滚动一下</li><li><strong>-120</strong>：向后滚动一下</li></ul><blockquote><p>对于大多数情况，只需知道滚动方向，则判断正负即可</p></blockquote></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("markdown/1-前端/4-JavaScript/1 基础/61-鼠标和滚轮事件.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const _61________ = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  _61________ as default
};
