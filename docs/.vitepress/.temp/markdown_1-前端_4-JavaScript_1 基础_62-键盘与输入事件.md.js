import { ssrRenderAttrs } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.yVxbj29m.js";
const __pageData = JSON.parse('{"title":"键盘与输入事件","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/1-前端/4-JavaScript/1 基础/62-键盘与输入事件.md","filePath":"markdown/1-前端/4-JavaScript/1 基础/62-键盘与输入事件.md"}');
const _sfc_main = { name: "markdown/1-前端/4-JavaScript/1 基础/62-键盘与输入事件.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="键盘与输入事件" tabindex="-1">键盘与输入事件 <a class="header-anchor" href="#键盘与输入事件" aria-label="Permalink to &quot;键盘与输入事件&quot;">​</a></h1><h2 id="键盘事件" tabindex="-1">键盘事件 <a class="header-anchor" href="#键盘事件" aria-label="Permalink to &quot;键盘事件&quot;">​</a></h2><h5 id="_1-键盘事件" tabindex="-1">1. 键盘事件 <a class="header-anchor" href="#_1-键盘事件" aria-label="Permalink to &quot;1. 键盘事件&quot;">​</a></h5><table><thead><tr><th>事件</th><th>说明</th></tr></thead><tbody><tr><td><code>keydown</code></td><td>用户按下键盘某个键时触发，而且持续按住会重复触发</td></tr><tr><td><code>keypress</code></td><td>用户按下键盘某个键并产生字符时触发，而且持续按住会重复触发，<strong>ESC</strong> 也可以触发<br>DOM 3 废弃，推荐使用 <strong>textInput</strong> 事件</td></tr><tr><td><code>keyup</code></td><td>用户释放键盘上某个键时触发</td></tr></tbody></table><h5 id="_2-键码" tabindex="-1">2. 键码 <a class="header-anchor" href="#_2-键码" aria-label="Permalink to &quot;2. 键码&quot;">​</a></h5><p>对于 <strong>keydown</strong> 和 <strong>keyup</strong> 事件，<strong>event</strong> 上有一个 <code>keyCode</code> 属性，保存键码</p><ul><li>对于字母和数字键，<strong>keyCode</strong> 对应小写字母和数字的 <strong>ASCII</strong> 码</li><li>对于非字符键</li></ul><table><thead><tr><th>键</th><th>键码</th><th>键</th><th>键码</th></tr></thead><tbody><tr><td>BackSpace</td><td>8</td><td>数字键盘 8</td><td>104</td></tr><tr><td>Tab</td><td>9</td><td>数字键盘 9</td><td>105</td></tr><tr><td>Clear</td><td>12</td><td>数字键盘 +</td><td>107</td></tr><tr><td>Enter</td><td>13</td><td>数字键盘 -</td><td>109</td></tr><tr><td>Shift</td><td>16</td><td>数字键盘 .</td><td>110</td></tr><tr><td>Control</td><td>17</td><td>数字键盘 /</td><td>111</td></tr><tr><td>Alt</td><td>18</td><td>F1</td><td>112</td></tr><tr><td>Cape Lock</td><td>20</td><td>F2</td><td>113</td></tr><tr><td>Esc</td><td>27</td><td>F3</td><td>114</td></tr><tr><td>Spacebar</td><td>32</td><td>F4</td><td>115</td></tr><tr><td>Page Up</td><td>33</td><td>F5</td><td>116</td></tr><tr><td>Page Down</td><td>34</td><td>F6</td><td>117</td></tr><tr><td>End</td><td>35</td><td>F7</td><td>118</td></tr><tr><td>Home</td><td>36</td><td>F8</td><td>119</td></tr><tr><td>左箭头</td><td>37</td><td>F9</td><td>120</td></tr><tr><td>上箭头</td><td>38</td><td>F10</td><td>121</td></tr><tr><td>右箭头</td><td>39</td><td>F11</td><td>122</td></tr><tr><td>下箭头</td><td>40</td><td>F12</td><td>123</td></tr><tr><td>Insert</td><td>45</td><td>Num Lock</td><td>144</td></tr><tr><td>Delete</td><td>46</td><td>Scroll Lock</td><td>145</td></tr><tr><td>左 window</td><td>91</td><td>分号(IE、Safari、Chrome)</td><td>186</td></tr><tr><td>右 window</td><td>92</td><td>分号(Opera、FF)</td><td>59</td></tr><tr><td>Context Menu</td><td>93</td><td>,&lt;</td><td>188</td></tr><tr><td>数字键盘 0</td><td>96</td><td>.&gt;</td><td>190</td></tr><tr><td>数字键盘 1</td><td>97</td><td>/?</td><td>191</td></tr><tr><td>数字键盘 2</td><td>98</td><td>/?</td><td>191</td></tr><tr><td>数字键盘 3</td><td>99</td><td>\`~</td><td>192</td></tr><tr><td>数字键盘 4</td><td>100</td><td>=+</td><td>61</td></tr><tr><td>数字键盘 5</td><td>101</td><td>[{</td><td>219</td></tr><tr><td>数字键盘 6</td><td>102</td><td>\\ |</td><td>220</td></tr><tr><td>数字键盘 7</td><td>103</td><td>]}</td><td>221</td></tr><tr><td></td><td></td><td>&#39;&quot;</td><td>222</td></tr></tbody></table><h5 id="_3-charcode" tabindex="-1">3. charCode <a class="header-anchor" href="#_3-charcode" aria-label="Permalink to &quot;3. charCode&quot;">​</a></h5><ul><li>按键字符对应的 <strong>ASCII</strong> 编码</li><li>可以使用 <strong>String.fromCharCode()</strong> 转化为实际的字符</li></ul><h5 id="_4-修饰键" tabindex="-1">4. 修饰键 <a class="header-anchor" href="#_4-修饰键" aria-label="Permalink to &quot;4. 修饰键&quot;">​</a></h5><p>键盘上的修饰键 <strong>Shift</strong>、<strong>Ctrl</strong>、<strong>Alt</strong>、<strong>Meta</strong> 经常用于修改鼠标事件行为</p><p>可以获取以下几个修饰键状态，<strong>true</strong> 为按下，<strong>false</strong> 为没按下：</p><ul><li><strong>shiftKey</strong>、<strong>ctrlKey</strong>、<strong>altKey</strong>、<strong>metaKey</strong></li></ul><h2 id="输入事件" tabindex="-1">输入事件 <a class="header-anchor" href="#输入事件" aria-label="Permalink to &quot;输入事件&quot;">​</a></h2><table><thead><tr><th>事件</th><th>说明</th></tr></thead><tbody><tr><td><code>textInput</code></td><td>在字符被输入到可编辑区域时触发</td></tr></tbody></table><h5 id="_1-与-keypress-的不同" tabindex="-1">1. 与 keypress 的不同 <a class="header-anchor" href="#_1-与-keypress-的不同" aria-label="Permalink to &quot;1. 与 keypress 的不同&quot;">​</a></h5><ul><li>keypress 可在任何有焦点元素上触发，而 textInput 只可以在可编辑区域上触发</li><li>keypress 可在影响文本时触发（包括退格键），而 textInput 只有在新字符被插入时才出发</li></ul><h5 id="_2-获取输入字符" tabindex="-1">2. 获取输入字符 <a class="header-anchor" href="#_2-获取输入字符" aria-label="Permalink to &quot;2. 获取输入字符&quot;">​</a></h5><ul><li>在 <strong>event</strong> 上有一个 <strong>data</strong> 可获取要插入的字符</li><li>区分大小写，按 <strong>s</strong> 时为 <strong>s</strong>，按 <strong>shift + s</strong> 时为 <strong>S</strong></li></ul><h5 id="_3-获取输入文本的手段" tabindex="-1">3. 获取输入文本的手段 <a class="header-anchor" href="#_3-获取输入文本的手段" aria-label="Permalink to &quot;3. 获取输入文本的手段&quot;">​</a></h5><ul><li>在 <strong>event</strong> 上有一个 <strong>inputMethod</strong> 可获取输入文本的手段</li></ul><table><thead><tr><th>值</th><th>手段</th></tr></thead><tbody><tr><td>0</td><td>浏览器不能确定是什么手段</td></tr><tr><td>1</td><td>键盘</td></tr><tr><td>2</td><td>黏贴</td></tr><tr><td>3</td><td>拖放操作</td></tr><tr><td>4</td><td>IME</td></tr><tr><td>5</td><td>表单选项</td></tr><tr><td>6</td><td>手写</td></tr><tr><td>7</td><td>语音</td></tr><tr><td>8</td><td>组合方式</td></tr><tr><td>9</td><td>脚本</td></tr></tbody></table></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("markdown/1-前端/4-JavaScript/1 基础/62-键盘与输入事件.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const _62________ = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  _62________ as default
};
