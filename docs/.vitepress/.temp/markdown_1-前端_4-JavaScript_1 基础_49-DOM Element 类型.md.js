import { ssrRenderAttrs, ssrRenderStyle } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.yVxbj29m.js";
const __pageData = JSON.parse('{"title":"DOM Element 类型","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/1-前端/4-JavaScript/1 基础/49-DOM Element 类型.md","filePath":"markdown/1-前端/4-JavaScript/1 基础/49-DOM Element 类型.md"}');
const _sfc_main = { name: "markdown/1-前端/4-JavaScript/1 基础/49-DOM Element 类型.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="dom-element-类型" tabindex="-1">DOM Element 类型 <a class="header-anchor" href="#dom-element-类型" aria-label="Permalink to &quot;DOM Element 类型&quot;">​</a></h1><h2 id="特征" tabindex="-1">特征 <a class="header-anchor" href="#特征" aria-label="Permalink to &quot;特征&quot;">​</a></h2><ul><li><strong>nodeType</strong> 等于 1</li><li><strong>nodeName</strong> 值为元素标签名</li></ul><blockquote><p>可以通过 <strong>nodeName</strong> 和 <strong>tagName</strong> 获取元素标签名，两个值是一样的，注意返回的是<strong>大写形式</strong></p></blockquote><h2 id="标准属性" tabindex="-1">标准属性 <a class="header-anchor" href="#标准属性" aria-label="Permalink to &quot;标准属性&quot;">​</a></h2><ul><li>所有 <strong>HTML</strong> 元素都有的特性</li><li>可以读写这些特性</li></ul><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td><strong>id</strong></td><td>元素在文档中的唯一标识符</td></tr><tr><td><strong>title</strong></td><td>包含元素的额外信息，鼠标在元素上时，会显示此信息</td></tr><tr><td><strong>lang</strong></td><td>元素内容的语言代码</td></tr><tr><td><strong>dir</strong></td><td>语言的书写方向</td></tr><tr><td><strong>className</strong></td><td>相当于 <strong>class</strong> 属性</td></tr></tbody></table><h2 id="获取、设置和删除属性" tabindex="-1">获取、设置和删除属性 <a class="header-anchor" href="#获取、设置和删除属性" aria-label="Permalink to &quot;获取、设置和删除属性&quot;">​</a></h2><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td><code>getAttribute()</code></td><td>获取属性</td></tr><tr><td><code>setAttribute()</code></td><td>设置属性</td></tr><tr><td><code>removeAttribute()</code></td><td>删除属性</td></tr></tbody></table><blockquote><p><strong>HTML5</strong> 规范建议自定义属性以 <strong>data-</strong> 为前缀，这样就可以通过 <code>dataset</code> 获取和定义这些自定义属性</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">const</span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}"> div</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}"> =</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> document.</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">getElementsByTagName</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">(</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">&#39;div&#39;</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">)[</span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}">0</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">]</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">div.dataset.id </span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}"> 1</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">console.</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">log</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">(div.dataset.id)              </span><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}">// 1</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">console.</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">log</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">(div.</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">getAttribute</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">(</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">&#39;data-id&#39;</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">)) </span><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}">// 1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></blockquote></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("markdown/1-前端/4-JavaScript/1 基础/49-DOM Element 类型.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const _49DOM_Element___ = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  _49DOM_Element___ as default
};
